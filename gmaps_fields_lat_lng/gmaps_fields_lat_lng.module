<?php
/**
 * Implements hook_field_info
 */
function gmaps_fields_lat_lng_field_info() {
  $fields_info = array();
  $fields_info['gmaps_fields_lat_lng'] = array(
    'label' => t('Latitude and Longitude Fields'),
    'default_widget' => 'gmaps_fields_lat_lng',
    'default_formatter' => 'gmaps_fields_lat_lng_show_values',
  );
  return $fields_info;
}

/**
 * Implements hook_field_validate
 */
function gmaps_fields_lat_lng_field_validate($entity_type, $entity, $field, $instance, $langcode, $items, &$errors) {}

/**
 * Implements hook_field_is_empty
 */
function gmaps_fields_lat_lng_field_is_empty($item, $field) {
  if (isset($item['gmaps_fields_lat_lng'])) {
    return empty($item['gmaps_fields_lat_lng']['lat']) || empty($item['gmaps_fields_lat_lng']['lng']);
  }
  return FALSE;
}

/**
 * Implements hook_field_formatter_info
 */
function gmaps_fields_lat_lng_field_formatter_info() {
  $fields_formatter_info = array();
  $fields_formatter_info['gmaps_fields_lat_lng_show_values'] = array(
    'label' => t('Show value'),
    'field types' => array('gmaps_fields_lat_lng'),
    'settings'  => array( //Array of the settings we'll create
      'lat_label' => t('latitude'),
      'lng_label' => t('longitude'),
      'separator' => ' - ',
    ),
  );
  $fields_formatter_info['gmaps_fields_lat_lng_show_marker'] = array(
    'label' => t('Show marker on map'),
    'field types' => array('gmaps_fields_lat_lng'),
  );
  $fields_formatter_info['gmaps_fields_lat_lng_show_marker_and_values'] = array(
    'label' => t('Show marker on map and values'),
    'field types' => array('gmaps_fields_lat_lng'),
    'settings'  => array( //Array of the settings we'll create
      'lat_label' => t('latitude'),
      'lng_label' => t('longitude'),
      'separator' => ' - ',
    ),
  );
  return $fields_formatter_info;
}

/**
 * Implements hook_field_formatter_settings_summary
 */
function gmaps_fields_lat_lng_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];
  $summary = '';
  if ($display['type'] === 'gmaps_fields_lat_lng_show_values' || $display['type'] === 'gmaps_fields_lat_lng_show_marker_and_values') {
    $summary = t('Use @lat and @lng as label and "@separator" as separator', array(
      '@lat'     => $settings['lat_label'],
      '@lng'  => $settings['lng_label'],
      '@separator' => $settings['separator']
    ));
  }
  return $summary;
}

/**
 * Implements hook_field_formatter_settings_form
 */
function gmaps_fields_lat_lng_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $element = array();
  
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];
  
  if ($display['type'] === 'gmaps_fields_lat_lng_show_values' || $display['type'] === 'gmaps_fields_lat_lng_show_marker_and_values') {
    $element['lat_label'] = array(
      '#type'           => 'textfield',
      '#title'          => t('Latitude label'),
      '#default_value'  => $settings['lat_label'],
    );
    $element['lng_label'] = array(
      '#type'           => 'textfield',
      '#title'          => t('Longitude label'),
      '#default_value'  => $settings['lng_label'],
    );
    $element['separator'] = array(
      '#type'           => 'textfield',
      '#title'          => t('Separator'),
      '#default_value'  => $settings['separator'],
    );
  }
  
  return $element;
}

/**
 * Implements hook_field_formatter_view
 */
function gmaps_fields_lat_lng_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
  
  switch ($display['type']) {
    case 'gmaps_fields_lat_lng_show_values':
      foreach ($items as $delta => $item) {
        $value = '';
        if (! empty($display['settings']['lat_label'])) {
          $value .= t($display['settings']['lat_label']) . ' : ';
        }
        $value .= $item['lat'];
        
        if (! empty($display['settings']['lng_label'])) {
          if (! empty($value) || ! empty($display['settings']['separator'])) {
            $value .= $display['settings']['separator'];
          }
          $value .= t($display['settings']['lng_label']) . ' : ';
        }
        $value .= $item['lng'];
        
        $element[$delta] = array(
          '#type' => 'html_tag',
          '#tag' => 'p',
          '#attributes' => array(),
          '#value' => $value,
        );
      }
      break;
    case 'gmaps_fields_lat_lng_show_marker_and_values':
      foreach ($items as $delta => $item) {
        $value = '';
        if (! empty($display['settings']['lat_label'])) {
          $value .= t($display['settings']['lat_label']) . ' : ';
        }
        $value .= $item['lat'];
        
        if (! empty($display['settings']['lng_label'])) {
          if (! empty($value)) {
            $value .= ' - ';
          }
          $value .= t($display['settings']['lng_label']) . ' : ';
        }
        $value .= $item['lng'];
        $element[$delta] = array(
          '#type' => 'html_tag',
          '#tag' => 'p',
          '#attributes' => array(),
          '#value' => $value,
        );
      }
    case 'gmaps_fields_lat_lng_show_marker':
      foreach ($items as $delta => $item) {
        $inner_html = isset($element[$delta])? drupal_render($element[$delta]) : '';
        $element[$delta] = array(
          '#type' => 'markup',
          '#markup' => '<div id="map-container">' . $inner_html . '<div id="google_map"></div></div>',
        );
        $configuration = google_maps_api_get_default_configuration();
        if (isset($item['lat'])) {
          $configuration->latitude = $item['lat'];
        }
        if (isset($item['lng'])) {
          $configuration->longitude = $item['lng'];
        }
        $marker = gmaps_fields_lat_lng_get_marker($entity, $entity_type, $field['field_name']);
        $element[$delta]['#attached'] = array(
          'js' => array(
            'https://maps.googleapis.com/maps/api/js?key=' . google_maps_api_variables_select('key') => array('type' => 'external'),
            drupal_get_path('module', 'google_maps_api') . '/api/google_maps_api.js' => array('type' => 'file'),
            drupal_get_path('module', 'gmaps_fields_lat_lng') . '/scripts/node.js' => array('type' => 'file'),
            array('data' => array('gmaps_fields_lat_lng_latlng' => array('configuration' => $configuration, 'marker' => $marker)), 'type' => 'setting')
          ),
          'css' => array(
            drupal_get_path('module', 'gmaps_fields_lat_lng') . '/css/node_edit.css' => array('type' => 'file'),
          )
        );
      }
      break;
  }
  
  return $element;
}

/**
 * Implements hook_field_widget_info
 */
function gmaps_fields_lat_lng_field_widget_info() {
  $fields_widget_info = array();
  
  $fields_widget_info['gmaps_fields_lat_lng_show_values'] = array(
    'label' => t('Two fields latitude and longitude'),
    'field types' => array('gmaps_fields_lat_lng'),
  );
  
  $fields_widget_info['gmaps_fields_lat_lng_show_values_and_map'] = array(
    'label' => t('Two fields latitude and longitude plus Map to select'),
    'field types' => array('gmaps_fields_lat_lng'),
  );
  
  return $fields_widget_info;
}

/**
 * Implements hook_field_widget_form
 */
function gmaps_fields_lat_lng_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  
 $value = isset($items[$delta]) ? $items[$delta] : NULL;

  $widget = $element;
  $widget['#delta'] = $delta;
  $widget += array(
    '#type' => 'fieldset',
    '#title' => t('Google maps elements')
  );
  $widget['#title'] = t('Google maps elements');
  switch ($instance['widget']['type']) {
    case 'gmaps_fields_lat_lng_show_values_and_map':
      $widget['map'] = array(
        '#type' => 'markup',
        '#markup' => '<div id="map-container"><div class="help">'. t("You can click on the map to fill the fields.") . '</div><div id="google_map"></div></div>',
      );
      
      $widget['maj_center_button'] = array(
        '#type' => 'button',
        '#value' => t('Update center'),
        '#attributes' => array(
          'class' => array('gmaps_fields_lat_lng_center_button')
        ),
        '#weight' => 20
      );

      $configuration = google_maps_api_get_default_configuration();
      if (isset($value['lat'])) {
        $configuration->latitude = $value['lat'];
      }
      if (isset($value['lng'])) {
        $configuration->longitude = $value['lng'];
      }
      $widget['#attached'] = array(
        'js' => array(
          'https://maps.googleapis.com/maps/api/js?key=' . google_maps_api_variables_select('key') => array('type' => 'external'),
          drupal_get_path('module', 'google_maps_api') . '/api/google_maps_api.js' => array('type' => 'file'),
          drupal_get_path('module', 'gmaps_fields_lat_lng') . '/scripts/node_edit.js' => array('type' => 'file'),
          array('data' => array('google_maps_api_configurations' => array('configuration' => $configuration)), 'type' => 'setting')
        ),
        'css' => array(
          drupal_get_path('module', 'gmaps_fields_lat_lng') . '/css/node_edit.css' => array('type' => 'file'),
        )
      );
    case 'gmaps_fields_lat_lng_show_values':
      $widget['lat'] = array(
        '#type' => 'textfield',
        '#title' => t('Latitude'),
        '#default_value' => isset($value['lat'])? $value['lat'] : NULL,
        '#attributes' => array(
          'class' => array('gmaps_fields_lat_lng_latitude')
        ),
        '#weight' => 5
      );
      $widget['lng'] = array(
        '#type' => 'textfield',
        '#title' => t('Longitude'),
        '#default_value' => isset($value['lng'])? $value['lng'] : NULL,
        '#attributes' => array(
          'class' => array('gmaps_fields_lat_lng_longitude')
        ),
        '#weight' => 6
      );
      $element += $widget;
      break;
  }
  return $element;
}

function gmaps_fields_lat_lng_get_marker($entity, $entity_type, $field_name) {
  $field_items = field_get_items($entity_type, $entity, $field_name);
  $ids = entity_extract_ids($entity_type, $entity);
  $marker = array(
    'name' => $entity_type . '-' . $ids[0],
    'position' => array(
      'lat' => $field_items[0]['lat'],
      'lng' => $field_items[0]['lng'],
    ),
    'title' => '',
    'icon' => '',
    'info_window' => ''
  );
  return $marker;
}